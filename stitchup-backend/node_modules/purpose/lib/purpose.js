'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = purpose;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _monolithic = require('cxs/monolithic');

var _monolithic2 = _interopRequireDefault(_monolithic);

var _static = require('inline-style-prefixer/static');

var _static2 = _interopRequireDefault(_static);

var _isValidAttr = require('./isValidAttr');

var _isValidAttr2 = _interopRequireDefault(_isValidAttr);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function getRules(rules, props) {
  return typeof rules === 'function' ? rules(props) : rules;
}

function createResolver(props) {
  function resolve() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return args.reduce(function (resolved, arg) {
      if (arg.constructor === Array) {
        return resolve(arg);
      } else {
        var rules = getRules(arg, props);
        return rules.constructor === Array ? resolve(rules) : _extends({}, resolved, rules);
      }
    }, {});
  }
  return resolve;
}

/*
 * repurposed from Styled Components
 * https://github.com/styled-components/styled-components/blob/14a96775aa8eb01e7f0f7448c9d7bbb281dfc92e/src/models/StyledComponent.js#L91-L104
 *
 * This creates a purpose component by passing in a component or tag:
 * purpose('div', { columnSize: PropTypes.number })
 *  (props => ({ width: props.columnSize / 12 * 100 }))
 *
*/
function purpose(target) {
  var displayName = target.displayName || 'PurposeComponent';
  var propTypes = target.propTypes || {};

  return function () {
    var defaultCss = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var StyledComponent = function StyledComponent(_ref) {
      var innerRef = _ref.innerRef,
          _ref$css = _ref.css,
          css = _ref$css === undefined ? {} : _ref$css,
          _ref$className = _ref.className,
          className = _ref$className === undefined ? '' : _ref$className,
          props = _objectWithoutProperties(_ref, ['innerRef', 'css', 'className']);

      var resolve = createResolver(props);
      var propsForElement = {
        ref: innerRef,
        className: (0, _monolithic2.default)((0, _static2.default)(resolve(defaultCss, css))) + ' ' + className
      };

      /* Don't pass through non HTML tags through to HTML elements */
      Object.keys(props).filter(function (propName) {
        return !target.tag || (0, _isValidAttr2.default)(propName);
      }).forEach(function (propName) {
        propsForElement[propName] = props[propName];
      });

      return (0, _react.createElement)(target.tag || target, propsForElement);
    };

    StyledComponent.displayName = displayName;
    StyledComponent.propTypes = _extends({
      css: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array])
    }, propTypes);

    return StyledComponent;
  };
}