'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDeclarations = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _objss = require('objss');

var _objss2 = _interopRequireDefault(_objss);

var _index = require('./index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var component = function component(Comp) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return function (strings) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var Component = function Component(props) {
      var decs = createDeclarations(strings, args)(props);

      if (typeof Comp === 'function') Comp(props);

      var rule = (0, _index.cxs)(decs, opts);
      var className = [rule.toString(), props.className || ''].join(' ').trim();

      return _react2.default.createElement(Comp, _extends({}, props, {
        className: className
      }));
    };

    Component.push = function (opts) {
      return component(Component, opts);
    };
    Component.media = function (media) {
      return component(Component, { media: media });
    };
    Component.hover = component(Component, { descendant: ':hover' });
    Component.focus = component(Component, { descendant: ':focus' });
    Component.active = component(Component, { descendant: ':active' });
    Component.disabled = component(Component, { descendant: ':disabled' });

    return Component;
  };
};

var createDeclarations = exports.createDeclarations = function createDeclarations(strings, args) {
  return function (props) {
    return strings.map(function (string, i) {
      var val = args[i] || '';
      var token = typeof val === 'function' ? val(props) : val;
      var parsed = (typeof token === 'undefined' ? 'undefined' : _typeof(token)) === 'object' ? (0, _objss2.default)(token) : token;
      return string + parsed;
    }).join('');
  };
};

exports.default = component;